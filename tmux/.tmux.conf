# Shortcut to source this file
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# tmux-yank
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe'
set -g @yank_with_mouse off 

# force tmux to use utf-8
setw -gq utf8 on
set -gq status-utf8 on

# Vi mode
setw -g mode-keys vi

# Looong scroll back
set -g history-limit 50000
set -s escape-time 0

# Necessary for tmux to render correct color
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -as terminal-overrides ',xterm*:sitm=\E[3m'
set-option -sa terminal-features ',screen-256color:RGB'

setw -g mouse on
set-option -g focus-events on

# Remap prefix key
unbind C-b
set -g prefix C-f
bind-key C-f send-prefix

# Restoring clear screen (overwritten by vim-like pane nav)
bind C-l send-keys 'C-l'

# Set new panes to open in current directory
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Vim like copy mode selection
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi Escape send-keys -X clear-selection

# Initial setup
new -s work
split-window -h
new -s personal
split-window -h

# Status bar
setw -g window-status-current-style "bg=blue"
# Needs `gitmux` executable in the PATH (https://github.com/arl/gitmux)
set -g status-right '#(gitmux -cfg ~/.gitmux.conf "#{pane_current_path}") | %d-%m-%Y %a.'
set -g status-right-length 80

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# Multi-modifier key bindings. See alacritty config 'keyboard.bindings' section
set -s user-keys[0] "\x1b[1;6A"
bind-key -n User0 send-keys "C-S-A"

set -s user-keys[1] "\x1b[1;6S"
bind-key -n User1 send-keys "C-S-S"

set -s user-keys[2] "\x1b[1;6D"
bind-key -n User2 send-keys "C-S-D"

set -s user-keys[3] "\x1b[1;6F"
bind-key -n User3 send-keys "C-S-F"

set -s user-keys[4] "\x1b[1;6H"
bind-key -n User4 send-keys "C-S-H"

set -s user-keys[5] "\x1b[1;6J"
bind-key -n User5 send-keys "C-S-J"

set -s user-keys[6] "\x1b[1;6K"
bind-key -n User6 send-keys "C-S-K"

set -s user-keys[7] "\x1b[1;6L"
bind-key -n User7 send-keys "C-S-L"

# pane navigation
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Smart pane resizing with awareness of Vim splits.
bind -n 'M-Left' if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 1'
bind -n 'M-Down' if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 1'
bind -n 'M-Up' if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 1'
bind -n 'M-Right' if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 1'

bind-key -T copy-mode-vi M-h resize-pane -L 1
bind-key -T copy-mode-vi M-j resize-pane -D 1
bind-key -T copy-mode-vi M-k resize-pane -U 1
bind-key -T copy-mode-vi M-l resize-pane -R 1

# Tmux Plugin Manager - needs `brew install tpm`
run '/opt/homebrew/opt/tpm/share/tpm/tpm'
